name: Unit Tests
on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

jobs:
  node-tests:
    strategy:
      fail-fast: false
      matrix:
        node_version:
          - "14"
          - "16"
          - "18"
    runs-on: ubuntu-latest
    env:
      NPM_CONFIG_UNSAFE_PERM: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}

      - run: npm install -g npm@latest

      - name: restore lerna
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            package-lock.json
            packages/*/node_modules
            packages/*/package-lock.json
            experimental/packages/*/node_modules
            experimental/packages/*/package-lock.json
          key: node-tests-${{ runner.os }}-${{ matrix.node_version }}-${{ hashFiles('package.json', 'packages/*/package.json', 'experimental/packages/*/package.json') }}-04292022

      - name: Bootstrap
        run: |
          npm install --ignore-scripts
          npx lerna bootstrap --no-ci --hoist --nohoist='zone.js' --ignore @opentelemetry/selenium-tests

      - name: Build ðŸ”§
        run: |
          npm run compile

      - name: Unit tests
        run: |
          # TODO(legendecas): webpack https://stackoverflow.com/questions/69692842/error-message-error0308010cdigital-envelope-routinesunsupported
          if [ "${{ matrix.node_version }}" = "18" ]; then
            export NODE_OPTIONS=--openssl-legacy-provider
          fi
          npm run test
      - name: Generate Report
        run: npm run coverage:report
        if: ${{ matrix.node_version == '18' }}
      - name: List coverage files
        run: find . -name 'coverage-final.json'
      - name: Store coverage
        uses: actions/upload-artifact@v3
        with:
          name: node-coverage
          path: |
            **/coverage-final.json
            !**/node_modules/**/coverage-final.json
          retention-days: 1
        if: ${{ matrix.node_version == '18' }}
  node-windows-tests:
    runs-on: windows-latest
    env:
      NPM_CONFIG_UNSAFE_PERM: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - run: npm install -g npm@latest

      - name: restore lerna
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            package-lock.json
            packages/*/node_modules
            packages/*/package-lock.json
            experimental/packages/*/node_modules
            experimental/packages/*/package-lock.json
          key: node-windows-tests-${{ runner.os }}-${{ hashFiles('package.json', 'packages/*/package.json', 'experimental/packages/*/package.json') }}

      - name: Bootstrap
        run: |
          npm install --ignore-scripts
          npx lerna bootstrap --no-ci --hoist --nohoist='zone.js' --ignore @opentelemetry/selenium-tests

      - name: Build ðŸ”§
        run: |
          npm config set script-shell "C:\\Program Files\\git\\bin\\bash.exe"
          npm run compile

      - name: Unit tests
        run: npm run test
  browser-tests:
    runs-on: ubuntu-latest
    env:
      NPM_CONFIG_UNSAFE_PERM: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: restore lerna
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            package-lock.json
            packages/*/node_modules
            packages/*/package-lock.json
            experimental/packages/*/node_modules
            experimental/packages/*/package-lock.json
          key: browser-tests-${{ runner.os }}-${{ hashFiles('package.json', 'packages/*/package.json', 'experimental/packages/*/package.json') }}-04292022

      - name: Bootstrap
        run: |
          npm install --ignore-scripts
          npx lerna bootstrap --no-ci --hoist --nohoist='zone.js' --ignore @opentelemetry/selenium-tests

      - name: Build ðŸ”§
        run: |
          npm run compile

      - name: Unit tests
        run: npm run test:browser
      - name: Generate Report
        run: npm run coverage:report:browser
      - name: Store coverage
        uses: actions/upload-artifact@v3
        with:
          name: browser-coverage
          path: |
            **/coverage-final.json
            !**/node_modules/**/coverage-final.json
          retention-days: 1
  webworker-tests:
    runs-on: ubuntu-latest
    env:
      NPM_CONFIG_UNSAFE_PERM: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: restore lerna
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            package-lock.json
            packages/*/node_modules
            packages/*/package-lock.json
            experimental/packages/*/node_modules
            experimental/packages/*/package-lock.json
          key: webworker-tests-${{ runner.os }}-${{ hashFiles('package.json', 'packages/*/package.json', 'experimental/packages/*/package.json') }}-04292022

      - name: Bootstrap
        run: |
          npm install --ignore-scripts
          npx lerna bootstrap --no-ci --hoist --nohoist='zone.js'

      - name: Build ðŸ”§
        run: |
          npm run compile

      - name: Unit tests
        run: npm run test:webworker
      - name: Generate Report
        run: npm run coverage:report:webworker
      - name: Store coverage
        uses: actions/upload-artifact@v3
        with:
          name: webworker-coverage
          path: |
            **/coverage-final.json
            !**/node_modules/**/coverage-final.json
          retention-days: 1
  api-eol-node-test:
    strategy:
      fail-fast: false
      matrix:
        node_version:
          - "8"
          - "10"
          - "12"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}

      - name: Build
        working-directory: ./api
        run: |
          npm install --ignore-scripts
          npm install @types/mocha@^7 mocha@^7 ts-loader@^8 ts-mocha@^8
          node ../scripts/version-update.js
          tsc --build tsconfig.json tsconfig.esm.json

      - name: Test
        working-directory: ./api
        run: npm test
  report-coverage:
    runs-on: ubuntu-latest
    needs:
      - node-tests
      - webworker-tests
      - browser-tests
    steps:
      - uses: actions/download-artifact@v3
        name: Download node reports
        with:
          name: node-coverage
          path: node-coverage
      - uses: actions/download-artifact@v3
        name: Download webworker reports
        with:
          name: webworker-coverage
          path: webworker-coverage
      - uses: actions/download-artifact@v3
        name: Download browser reports
        with:
          name: browser-coverage
          path: browser-coverage
      - name: Move reports
        run: |
          ls -al
          find ./node-coverage/ -name "coverage-final.json" -exec sh -c 'mv $1 $(dirname $1)/coverage-final-node.json' sh {} \;
          find ./webworker-coverage/ -name "coverage-final.json" -exec sh -c 'mv $1 $(dirname $1)/coverage-final-webworker.json' sh {} \;
          find ./browser-coverage/ -name "coverage-final.json" -exec sh -c 'mv $1 $(dirname $1)/coverage-final-browser.json' sh {} \;
          rsync -av node-coverage/ .
          rsync -av webworker-coverage/ .
          rsync -av browser-coverage/ .
      - name: Report Coverage
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          verbose: true
          files: coverage-final-node.json,coverage-final-browser.json,coverage-final-webworker.json
